[{"/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/App.js":"1","/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/components/Sidebar.js":"2","/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/pages/Settings.js":"3","/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/pages/Account.js":"4","/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/components/Main.js":"5","/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/pages/Home.js":"6","/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/pages/Assignments.js":"7","/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/pages/Dashboard.js":"8","/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/pages/Students.js":"9","/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/reportWebVitals.js":"10","/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/pages/Logout.js":"11","/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/components/TestQComponent.js":"12"},{"size":4370,"mtime":1606411578615,"results":"13","hashOfConfig":"14"},{"size":3805,"mtime":1606411993887,"results":"15","hashOfConfig":"14"},{"size":1362,"mtime":1606411499015,"results":"16","hashOfConfig":"14"},{"size":1359,"mtime":1606411271715,"results":"17","hashOfConfig":"14"},{"size":1245,"mtime":1606396938509,"results":"18","hashOfConfig":"14"},{"size":1350,"mtime":1606411182816,"results":"19","hashOfConfig":"14"},{"size":3017,"mtime":1606680990563,"results":"20","hashOfConfig":"14"},{"size":1365,"mtime":1606411499028,"results":"21","hashOfConfig":"14"},{"size":1362,"mtime":1606411499020,"results":"22","hashOfConfig":"14"},{"size":362,"mtime":1606330149020,"results":"23","hashOfConfig":"14"},{"size":1356,"mtime":1606411499024,"results":"24","hashOfConfig":"14"},{"size":198,"mtime":1606680858018,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1fujzpf",{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/App.js",["56"],"import React, {useState} from 'react';\nimport clsx from 'clsx';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Sidebar from \"./components/Sidebar\";\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Account from \"./pages/Account\";\nimport Students from \"./pages/Students\";\nimport Settings from \"./pages/Settings\";\nimport Dashboard from \"./pages/Dashboard\";\nimport Logout from \"./pages/Logout\";\nimport Main from \"./components/Main\";\nimport Home from \"./pages/Home\";\nimport Assignments from './pages/Assignments'\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    color: '#c0caca',\n    backgroundColor: '#212121',\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    backgroundColor: '#eae9e9',\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n  contentHeader: {\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  }\n}));\n\nexport default function PersistentDrawerLeft() {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <AppBar\n            position=\"fixed\"\n            className={clsx(classes.appBar, {\n              [classes.appBarShift]: open,\n            })}\n        >\n          <Toolbar>\n            <IconButton\n                color=\"inherit\"\n                aria-label=\"open drawer\"\n                onClick={handleDrawerOpen}\n                edge=\"start\"\n                className={clsx(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" noWrap>\n              Homework System\n            </Typography>\n          </Toolbar>\n        </AppBar>\n\n        <Router>\n          <Sidebar open={open} handleDrawerOpen={handleDrawerOpen} handleDrawerClose={handleDrawerClose} />\n          <Switch>\n            <Main open={open}>\n              <Route exact path=\"/\" render={props => <Home {...props} />} />\n              <Route exact path=\"/account\" render={props => <Account {...props} />} />\n              <Route exact path=\"/students\" render={props => <Students {...props} />} />\n              <Route exact path=\"/assignments\" render={props => <Assignments {...props} />} />\n              <Route exact path=\"/dashboard\" render={props => <Dashboard {...props} />} />\n              <Route exact path=\"/settings\" render={props => <Settings {...props} />} />\n              <Route exact path=\"/logout\" render={props => <Logout {...props} />} />\n            </Main>\n\n          </Switch>\n        </Router>\n\n      </div>\n  );\n}\n",["57","58"],"/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/components/Sidebar.js",["59","60"],"import React, { useState } from 'react';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport AssignmentIcon from \"@material-ui/icons/Assignment\";\nimport TrendingUpIcon from \"@material-ui/icons/TrendingUp\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport { withRouter } from \"react-router-dom\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n        hide: {\n            display: 'none',\n        },\n        drawer: {\n            width: drawerWidth,\n            flexShrink: 0,\n        },\n        drawerPaper: {\n            width: drawerWidth,\n            backgroundColor: '#b7b5b5',\n        },\n        drawerHeader: {\n            display: 'flex',\n            alignItems: 'center',\n            padding: theme.spacing(0, 1),\n            // necessary for content to be below app bar\n            ...theme.mixins.toolbar,\n            justifyContent: 'flex-end',\n        },\n    })\n)\n\nfunction Sidebar({ open, handleDrawerOpen, handleDrawerClose, history }) {\n    const classes = useStyles();\n    const theme = useTheme();\n\n    const itemList = [{\n        text: 'Account',\n        icon: <PersonIcon />,\n        onClick: () => {\n            history.push('/account');\n            handleDrawerClose();\n        }\n    }, {\n        text: 'Students',\n        icon: <PeopleIcon />,\n        onClick: () => {\n            history.push('/students');\n            handleDrawerClose();\n        }\n    }, {\n        text: 'Assignments',\n        icon: <AssignmentIcon />,\n        onClick: () => {\n            history.push('/assignments');\n            handleDrawerClose();\n        }\n    }, {\n        text: 'Dashboard',\n        icon: <TrendingUpIcon />,\n        onClick: () => {\n            history.push('/dashboard');\n            handleDrawerClose();\n        }\n    }, {\n        text: 'Settings',\n        icon: <SettingsIcon />,\n        onClick: () => {\n            history.push('/settings');\n            handleDrawerClose();\n        }\n    }, {\n        text: 'Logout',\n        icon: <ArrowBackIcon />,\n        onClick: () => {\n            history.push('/logout');\n            handleDrawerClose();\n        }\n    }];\n\n\n    return (\n        <div>\n            <Drawer\n                className={classes.drawer}\n                variant=\"persistent\"\n                anchor=\"left\"\n                open={open}\n                classes={{\n                    paper: classes.drawerPaper,\n                }}\n            >\n                <div className={classes.drawerHeader}>\n                    <IconButton onClick={handleDrawerClose}>\n                        <ChevronLeftIcon />\n                    </IconButton>\n                </div>\n\n                <List>\n                    {itemList.map((item, index) => {\n                        const { text, icon, onClick } = item;\n                        return (\n                            <ListItem button key={index} className=\"listItem\" onClick={onClick}>\n                                {icon && <ListItemIcon>{icon}</ListItemIcon>}\n                                <ListItemText primary={text} />\n                            </ListItem>\n                        );\n                    })}\n                </List>\n\n            </Drawer>\n        </div>\n    );\n}\n\nexport default withRouter(Sidebar);\n\n\n","/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/pages/Settings.js",[],["61","62"],"/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/pages/Account.js",[],"/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/components/Main.js",["63"],"import React from 'react';\nimport {makeStyles, useTheme} from '@material-ui/core/styles';\nimport clsx from \"clsx\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3),\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n        }),\n        marginLeft: -drawerWidth,\n    },\n    contentShift: {\n        transition: theme.transitions.create('margin', {\n            easing: theme.transitions.easing.easeOut,\n            duration: theme.transitions.duration.enteringScreen,\n        }),\n        marginLeft: 0,\n    },\n    contentHeader: {\n        // necessary for content to be below app bar\n        ...theme.mixins.toolbar,\n    }\n    }));\n\nfunction Main({ open,  children}) {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <main\n                className={clsx(classes.content, {\n                    [classes.contentShift]: open,\n                })}\n            >\n                <div className={classes.contentHeader} />\n                {children}\n\n            </main>\n\n        </div>\n    );\n}\n\nexport default Main;",["64","65"],"/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/pages/Home.js",[],"/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/pages/Assignments.js",[],"/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/pages/Dashboard.js",[],"/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/pages/Students.js",[],"/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/reportWebVitals.js",[],"/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/pages/Logout.js",[],"/Users/alex/Documents/Development/Frontend/ui-playgrounds/true-react-ui-drawer/src/components/TestQComponent.js",[],{"ruleId":"66","severity":1,"message":"67","line":89,"column":9,"nodeType":"68","messageId":"69","endLine":89,"endColumn":14},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","replacedBy":"73"},{"ruleId":"66","severity":1,"message":"74","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":46,"column":11,"nodeType":"68","messageId":"69","endLine":46,"endColumn":16},{"ruleId":"70","replacedBy":"75"},{"ruleId":"72","replacedBy":"76"},{"ruleId":"66","severity":1,"message":"77","line":2,"column":21,"nodeType":"68","messageId":"69","endLine":2,"endColumn":29},{"ruleId":"70","replacedBy":"78"},{"ruleId":"72","replacedBy":"79"},"no-unused-vars","'theme' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["80"],"no-negated-in-lhs",["81"],"'useState' is defined but never used.",["80"],["81"],"'useTheme' is defined but never used.",["80"],["81"],"no-global-assign","no-unsafe-negation"]